@model Security.Blog

@{
    ViewBag.Title = "Write_post";
}

<h2>Write_post</h2>

<link href="../css/jquery.tagit.css" rel="stylesheet" type="text/css">
<link href="../css/tagit.ui-zendesk.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/flick/jquery-ui.css">
<!-- The real deal -->
<script src="../js/tag-it.js" type="text/javascript" charset="utf-8"></script>
<script>
    $(function () {
        var sampleTags = ['c++', 'java', 'php', 'coldfusion', 'javascript', 'asp', 'ruby', 'python', 'c', 'scala', 'groovy', 'haskell', 'perl', 'erlang', 'apl', 'cobol', 'go', 'lua'];

        //-------------------------------
        // Minimal
        //-------------------------------
        $('#myTags').tagit();

        //-------------------------------
        // Single field
        //-------------------------------
        $('#singleFieldTags').tagit({
            availableTags: sampleTags,
            // This will make Tag-it submit a single form value, as a comma-delimited field.
            singleField: true,
            singleFieldNode: $('#mySingleField')
        });

    });
</script>


@using (Html.BeginForm("Write_post", "Home",FormMethod.Post , null))
{   
    @Html.ValidationSummary(true) 

    <fieldset>
        <legend>Blogs</legend>
        <div class="editor-label">
            @Html.Label("Tags")
        </div>
        <p>             
            <input type="hidden" name="tags" id="mySingleField" value="">
        </p>
        <ul id="singleFieldTags"></ul>         
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Contents)
        </div>
        <div class="editor-field">               
            @Html.Raw(ViewBag.Editor)             
            @Html.ValidationMessageFor(model => model.Contents)
        </div>         
        <div class="editor-field">
            @Html.HiddenFor(model => model.Author_id, new { @Value = @User.UserId })                                
        </div>         
        <div class="editor-field">
            @Html.HiddenFor(model => model.is_active, new { @Value = false })                                       
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
} 
